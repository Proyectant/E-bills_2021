// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Bills.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace BillsNamespace {
  public static partial class BillProtoServis
  {
    static readonly string __ServiceName = "BillProtoServis";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::BillsNamespace.PostaBillMsg> __Marshaller_PostaBillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.PostaBillMsg.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.BillPostResponse> __Marshaller_BillPostResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.BillPostResponse.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.ChangeBillPostaResponse> __Marshaller_ChangeBillPostaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.ChangeBillPostaResponse.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.DeleteBillPostaRequest> __Marshaller_DeleteBillPostaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.DeleteBillPostaRequest.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.DeleteBillPostaResponse> __Marshaller_DeleteBillPostaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.DeleteBillPostaResponse.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.EmptyMsg> __Marshaller_EmptyMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.EmptyMsg.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.BillMsg> __Marshaller_BillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.BillMsg.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.RashodBillMsg> __Marshaller_RashodBillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.RashodBillMsg.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.ChangeBillRashodResponse> __Marshaller_ChangeBillRashodResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.ChangeBillRashodResponse.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.DeleteBillRequest> __Marshaller_DeleteBillRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.DeleteBillRequest.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.DeleteBillRashodResponse> __Marshaller_DeleteBillRashodResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.DeleteBillRashodResponse.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.KucaBillMsg> __Marshaller_KucaBillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.KucaBillMsg.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.DeleteBillResponse> __Marshaller_DeleteBillResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.DeleteBillResponse.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.BankaBillMsg> __Marshaller_BankaBillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.BankaBillMsg.Parser));
    static readonly grpc::Marshaller<global::BillsNamespace.IzvestajBillMsg> __Marshaller_IzvestajBillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BillsNamespace.IzvestajBillMsg.Parser));

    static readonly grpc::Method<global::BillsNamespace.PostaBillMsg, global::BillsNamespace.BillPostResponse> __Method_AddBillPosta = new grpc::Method<global::BillsNamespace.PostaBillMsg, global::BillsNamespace.BillPostResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBillPosta",
        __Marshaller_PostaBillMsg,
        __Marshaller_BillPostResponse);

    static readonly grpc::Method<global::BillsNamespace.PostaBillMsg, global::BillsNamespace.ChangeBillPostaResponse> __Method_ChangeBillPosta = new grpc::Method<global::BillsNamespace.PostaBillMsg, global::BillsNamespace.ChangeBillPostaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeBillPosta",
        __Marshaller_PostaBillMsg,
        __Marshaller_ChangeBillPostaResponse);

    static readonly grpc::Method<global::BillsNamespace.DeleteBillPostaRequest, global::BillsNamespace.DeleteBillPostaResponse> __Method_DeleteBillPosta = new grpc::Method<global::BillsNamespace.DeleteBillPostaRequest, global::BillsNamespace.DeleteBillPostaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBillPosta",
        __Marshaller_DeleteBillPostaRequest,
        __Marshaller_DeleteBillPostaResponse);

    static readonly grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg> __Method_GetAllPostaBills = new grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllPostaBills",
        __Marshaller_EmptyMsg,
        __Marshaller_BillMsg);

    static readonly grpc::Method<global::BillsNamespace.RashodBillMsg, global::BillsNamespace.BillPostResponse> __Method_AddBillRashod = new grpc::Method<global::BillsNamespace.RashodBillMsg, global::BillsNamespace.BillPostResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBillRashod",
        __Marshaller_RashodBillMsg,
        __Marshaller_BillPostResponse);

    static readonly grpc::Method<global::BillsNamespace.RashodBillMsg, global::BillsNamespace.ChangeBillRashodResponse> __Method_ChangeBillRashod = new grpc::Method<global::BillsNamespace.RashodBillMsg, global::BillsNamespace.ChangeBillRashodResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeBillRashod",
        __Marshaller_RashodBillMsg,
        __Marshaller_ChangeBillRashodResponse);

    static readonly grpc::Method<global::BillsNamespace.DeleteBillRequest, global::BillsNamespace.DeleteBillRashodResponse> __Method_DeleteBillRashod = new grpc::Method<global::BillsNamespace.DeleteBillRequest, global::BillsNamespace.DeleteBillRashodResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBillRashod",
        __Marshaller_DeleteBillRequest,
        __Marshaller_DeleteBillRashodResponse);

    static readonly grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg> __Method_GetAllRashodBill = new grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllRashodBill",
        __Marshaller_EmptyMsg,
        __Marshaller_BillMsg);

    static readonly grpc::Method<global::BillsNamespace.KucaBillMsg, global::BillsNamespace.BillPostResponse> __Method_AddBillKuca = new grpc::Method<global::BillsNamespace.KucaBillMsg, global::BillsNamespace.BillPostResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBillKuca",
        __Marshaller_KucaBillMsg,
        __Marshaller_BillPostResponse);

    static readonly grpc::Method<global::BillsNamespace.KucaBillMsg, global::BillsNamespace.BillPostResponse> __Method_ChangeBillKuca = new grpc::Method<global::BillsNamespace.KucaBillMsg, global::BillsNamespace.BillPostResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeBillKuca",
        __Marshaller_KucaBillMsg,
        __Marshaller_BillPostResponse);

    static readonly grpc::Method<global::BillsNamespace.DeleteBillRequest, global::BillsNamespace.DeleteBillResponse> __Method_DeleteBill = new grpc::Method<global::BillsNamespace.DeleteBillRequest, global::BillsNamespace.DeleteBillResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBill",
        __Marshaller_DeleteBillRequest,
        __Marshaller_DeleteBillResponse);

    static readonly grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg> __Method_GetAllKucaBill = new grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllKucaBill",
        __Marshaller_EmptyMsg,
        __Marshaller_BillMsg);

    static readonly grpc::Method<global::BillsNamespace.BankaBillMsg, global::BillsNamespace.BillPostResponse> __Method_AddBillBanka = new grpc::Method<global::BillsNamespace.BankaBillMsg, global::BillsNamespace.BillPostResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBillBanka",
        __Marshaller_BankaBillMsg,
        __Marshaller_BillPostResponse);

    static readonly grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg> __Method_GetAllBankaBills = new grpc::Method<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllBankaBills",
        __Marshaller_EmptyMsg,
        __Marshaller_BillMsg);

    static readonly grpc::Method<global::BillsNamespace.IzvestajBillMsg, global::BillsNamespace.BillMsg> __Method_ListaZaIzvestaj = new grpc::Method<global::BillsNamespace.IzvestajBillMsg, global::BillsNamespace.BillMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListaZaIzvestaj",
        __Marshaller_IzvestajBillMsg,
        __Marshaller_BillMsg);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::BillsNamespace.BillsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BillProtoServis</summary>
    [grpc::BindServiceMethod(typeof(BillProtoServis), "BindService")]
    public abstract partial class BillProtoServisBase
    {
      /// <summary>
      ///rpc metode za POSTU
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.BillPostResponse> AddBillPosta(global::BillsNamespace.PostaBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.ChangeBillPostaResponse> ChangeBillPosta(global::BillsNamespace.PostaBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.DeleteBillPostaResponse> DeleteBillPosta(global::BillsNamespace.DeleteBillPostaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///kraj rpc metoda za POSTU
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task GetAllPostaBills(global::BillsNamespace.EmptyMsg request, grpc::IServerStreamWriter<global::BillsNamespace.BillMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///rpc metode za RASHOD 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.BillPostResponse> AddBillRashod(global::BillsNamespace.RashodBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.ChangeBillRashodResponse> ChangeBillRashod(global::BillsNamespace.RashodBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.DeleteBillRashodResponse> DeleteBillRashod(global::BillsNamespace.DeleteBillRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///kraj rpc metoda za RASHOD 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task GetAllRashodBill(global::BillsNamespace.EmptyMsg request, grpc::IServerStreamWriter<global::BillsNamespace.BillMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///rpc metode za KUCU 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.BillPostResponse> AddBillKuca(global::BillsNamespace.KucaBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.BillPostResponse> ChangeBillKuca(global::BillsNamespace.KucaBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.DeleteBillResponse> DeleteBill(global::BillsNamespace.DeleteBillRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///kraj rpc metoda za KUCU 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task GetAllKucaBill(global::BillsNamespace.EmptyMsg request, grpc::IServerStreamWriter<global::BillsNamespace.BillMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::BillsNamespace.BillPostResponse> AddBillBanka(global::BillsNamespace.BankaBillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///kraj rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task GetAllBankaBills(global::BillsNamespace.EmptyMsg request, grpc::IServerStreamWriter<global::BillsNamespace.BillMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ListaZaIzvestaj(global::BillsNamespace.IzvestajBillMsg request, grpc::IServerStreamWriter<global::BillsNamespace.BillMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BillProtoServis</summary>
    public partial class BillProtoServisClient : grpc::ClientBase<BillProtoServisClient>
    {
      /// <summary>Creates a new client for BillProtoServis</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BillProtoServisClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BillProtoServis that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BillProtoServisClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BillProtoServisClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BillProtoServisClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///rpc metode za POSTU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillPosta(global::BillsNamespace.PostaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillPosta(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za POSTU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillPosta(global::BillsNamespace.PostaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddBillPosta, null, options, request);
      }
      /// <summary>
      ///rpc metode za POSTU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillPostaAsync(global::BillsNamespace.PostaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillPostaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za POSTU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillPostaAsync(global::BillsNamespace.PostaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddBillPosta, null, options, request);
      }
      public virtual global::BillsNamespace.ChangeBillPostaResponse ChangeBillPosta(global::BillsNamespace.PostaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeBillPosta(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BillsNamespace.ChangeBillPostaResponse ChangeBillPosta(global::BillsNamespace.PostaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeBillPosta, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.ChangeBillPostaResponse> ChangeBillPostaAsync(global::BillsNamespace.PostaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeBillPostaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.ChangeBillPostaResponse> ChangeBillPostaAsync(global::BillsNamespace.PostaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeBillPosta, null, options, request);
      }
      public virtual global::BillsNamespace.DeleteBillPostaResponse DeleteBillPosta(global::BillsNamespace.DeleteBillPostaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBillPosta(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BillsNamespace.DeleteBillPostaResponse DeleteBillPosta(global::BillsNamespace.DeleteBillPostaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBillPosta, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.DeleteBillPostaResponse> DeleteBillPostaAsync(global::BillsNamespace.DeleteBillPostaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBillPostaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.DeleteBillPostaResponse> DeleteBillPostaAsync(global::BillsNamespace.DeleteBillPostaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBillPosta, null, options, request);
      }
      /// <summary>
      ///kraj rpc metoda za POSTU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllPostaBills(global::BillsNamespace.EmptyMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPostaBills(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///kraj rpc metoda za POSTU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllPostaBills(global::BillsNamespace.EmptyMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllPostaBills, null, options, request);
      }
      /// <summary>
      ///rpc metode za RASHOD 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillRashod(global::BillsNamespace.RashodBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillRashod(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za RASHOD 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillRashod(global::BillsNamespace.RashodBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddBillRashod, null, options, request);
      }
      /// <summary>
      ///rpc metode za RASHOD 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillRashodAsync(global::BillsNamespace.RashodBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillRashodAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za RASHOD 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillRashodAsync(global::BillsNamespace.RashodBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddBillRashod, null, options, request);
      }
      public virtual global::BillsNamespace.ChangeBillRashodResponse ChangeBillRashod(global::BillsNamespace.RashodBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeBillRashod(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BillsNamespace.ChangeBillRashodResponse ChangeBillRashod(global::BillsNamespace.RashodBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeBillRashod, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.ChangeBillRashodResponse> ChangeBillRashodAsync(global::BillsNamespace.RashodBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeBillRashodAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.ChangeBillRashodResponse> ChangeBillRashodAsync(global::BillsNamespace.RashodBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeBillRashod, null, options, request);
      }
      public virtual global::BillsNamespace.DeleteBillRashodResponse DeleteBillRashod(global::BillsNamespace.DeleteBillRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBillRashod(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BillsNamespace.DeleteBillRashodResponse DeleteBillRashod(global::BillsNamespace.DeleteBillRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBillRashod, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.DeleteBillRashodResponse> DeleteBillRashodAsync(global::BillsNamespace.DeleteBillRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBillRashodAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.DeleteBillRashodResponse> DeleteBillRashodAsync(global::BillsNamespace.DeleteBillRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBillRashod, null, options, request);
      }
      /// <summary>
      ///kraj rpc metoda za RASHOD 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllRashodBill(global::BillsNamespace.EmptyMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllRashodBill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///kraj rpc metoda za RASHOD 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllRashodBill(global::BillsNamespace.EmptyMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllRashodBill, null, options, request);
      }
      /// <summary>
      ///rpc metode za KUCU 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillKuca(global::BillsNamespace.KucaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillKuca(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za KUCU 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillKuca(global::BillsNamespace.KucaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddBillKuca, null, options, request);
      }
      /// <summary>
      ///rpc metode za KUCU 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillKucaAsync(global::BillsNamespace.KucaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillKucaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za KUCU 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillKucaAsync(global::BillsNamespace.KucaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddBillKuca, null, options, request);
      }
      public virtual global::BillsNamespace.BillPostResponse ChangeBillKuca(global::BillsNamespace.KucaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeBillKuca(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BillsNamespace.BillPostResponse ChangeBillKuca(global::BillsNamespace.KucaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeBillKuca, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> ChangeBillKucaAsync(global::BillsNamespace.KucaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeBillKucaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> ChangeBillKucaAsync(global::BillsNamespace.KucaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeBillKuca, null, options, request);
      }
      public virtual global::BillsNamespace.DeleteBillResponse DeleteBill(global::BillsNamespace.DeleteBillRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BillsNamespace.DeleteBillResponse DeleteBill(global::BillsNamespace.DeleteBillRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBill, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.DeleteBillResponse> DeleteBillAsync(global::BillsNamespace.DeleteBillRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBillAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.DeleteBillResponse> DeleteBillAsync(global::BillsNamespace.DeleteBillRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBill, null, options, request);
      }
      /// <summary>
      ///kraj rpc metoda za KUCU 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllKucaBill(global::BillsNamespace.EmptyMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllKucaBill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///kraj rpc metoda za KUCU 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllKucaBill(global::BillsNamespace.EmptyMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllKucaBill, null, options, request);
      }
      /// <summary>
      ///rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillBanka(global::BillsNamespace.BankaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillBanka(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::BillsNamespace.BillPostResponse AddBillBanka(global::BillsNamespace.BankaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddBillBanka, null, options, request);
      }
      /// <summary>
      ///rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillBankaAsync(global::BillsNamespace.BankaBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBillBankaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::BillsNamespace.BillPostResponse> AddBillBankaAsync(global::BillsNamespace.BankaBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddBillBanka, null, options, request);
      }
      /// <summary>
      ///kraj rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllBankaBills(global::BillsNamespace.EmptyMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllBankaBills(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///kraj rpc metode za BANKU
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> GetAllBankaBills(global::BillsNamespace.EmptyMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllBankaBills, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> ListaZaIzvestaj(global::BillsNamespace.IzvestajBillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListaZaIzvestaj(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::BillsNamespace.BillMsg> ListaZaIzvestaj(global::BillsNamespace.IzvestajBillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ListaZaIzvestaj, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BillProtoServisClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BillProtoServisClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BillProtoServisBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddBillPosta, serviceImpl.AddBillPosta)
          .AddMethod(__Method_ChangeBillPosta, serviceImpl.ChangeBillPosta)
          .AddMethod(__Method_DeleteBillPosta, serviceImpl.DeleteBillPosta)
          .AddMethod(__Method_GetAllPostaBills, serviceImpl.GetAllPostaBills)
          .AddMethod(__Method_AddBillRashod, serviceImpl.AddBillRashod)
          .AddMethod(__Method_ChangeBillRashod, serviceImpl.ChangeBillRashod)
          .AddMethod(__Method_DeleteBillRashod, serviceImpl.DeleteBillRashod)
          .AddMethod(__Method_GetAllRashodBill, serviceImpl.GetAllRashodBill)
          .AddMethod(__Method_AddBillKuca, serviceImpl.AddBillKuca)
          .AddMethod(__Method_ChangeBillKuca, serviceImpl.ChangeBillKuca)
          .AddMethod(__Method_DeleteBill, serviceImpl.DeleteBill)
          .AddMethod(__Method_GetAllKucaBill, serviceImpl.GetAllKucaBill)
          .AddMethod(__Method_AddBillBanka, serviceImpl.AddBillBanka)
          .AddMethod(__Method_GetAllBankaBills, serviceImpl.GetAllBankaBills)
          .AddMethod(__Method_ListaZaIzvestaj, serviceImpl.ListaZaIzvestaj).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BillProtoServisBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddBillPosta, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.PostaBillMsg, global::BillsNamespace.BillPostResponse>(serviceImpl.AddBillPosta));
      serviceBinder.AddMethod(__Method_ChangeBillPosta, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.PostaBillMsg, global::BillsNamespace.ChangeBillPostaResponse>(serviceImpl.ChangeBillPosta));
      serviceBinder.AddMethod(__Method_DeleteBillPosta, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.DeleteBillPostaRequest, global::BillsNamespace.DeleteBillPostaResponse>(serviceImpl.DeleteBillPosta));
      serviceBinder.AddMethod(__Method_GetAllPostaBills, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(serviceImpl.GetAllPostaBills));
      serviceBinder.AddMethod(__Method_AddBillRashod, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.RashodBillMsg, global::BillsNamespace.BillPostResponse>(serviceImpl.AddBillRashod));
      serviceBinder.AddMethod(__Method_ChangeBillRashod, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.RashodBillMsg, global::BillsNamespace.ChangeBillRashodResponse>(serviceImpl.ChangeBillRashod));
      serviceBinder.AddMethod(__Method_DeleteBillRashod, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.DeleteBillRequest, global::BillsNamespace.DeleteBillRashodResponse>(serviceImpl.DeleteBillRashod));
      serviceBinder.AddMethod(__Method_GetAllRashodBill, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(serviceImpl.GetAllRashodBill));
      serviceBinder.AddMethod(__Method_AddBillKuca, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.KucaBillMsg, global::BillsNamespace.BillPostResponse>(serviceImpl.AddBillKuca));
      serviceBinder.AddMethod(__Method_ChangeBillKuca, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.KucaBillMsg, global::BillsNamespace.BillPostResponse>(serviceImpl.ChangeBillKuca));
      serviceBinder.AddMethod(__Method_DeleteBill, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.DeleteBillRequest, global::BillsNamespace.DeleteBillResponse>(serviceImpl.DeleteBill));
      serviceBinder.AddMethod(__Method_GetAllKucaBill, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(serviceImpl.GetAllKucaBill));
      serviceBinder.AddMethod(__Method_AddBillBanka, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BillsNamespace.BankaBillMsg, global::BillsNamespace.BillPostResponse>(serviceImpl.AddBillBanka));
      serviceBinder.AddMethod(__Method_GetAllBankaBills, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::BillsNamespace.EmptyMsg, global::BillsNamespace.BillMsg>(serviceImpl.GetAllBankaBills));
      serviceBinder.AddMethod(__Method_ListaZaIzvestaj, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::BillsNamespace.IzvestajBillMsg, global::BillsNamespace.BillMsg>(serviceImpl.ListaZaIzvestaj));
    }

  }
}
#endregion
