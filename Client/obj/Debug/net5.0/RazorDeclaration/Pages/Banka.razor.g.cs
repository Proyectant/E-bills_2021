// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ERacuniNovi.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using ERacuniNovi.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using ERacuniNovi.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using Grpc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Proye\Desktop\ERacuni\Client\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using ERacuniNovi.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using ERacuniNovi.Shared.Konvertor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using Grpc.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using System.Diagnostics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using BillsNamespace;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using ERacuniNovi.Client.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using Blazored.FluentValidation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
using FluentValidation;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/banka")]
    public partial class Banka : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 296 "C:\Users\Proye\Desktop\ERacuni\Client\Pages\Banka.razor"
       
    List<Bill> ListaRacunaBanka = new List<Bill>(); //Lista svih racuna za prikaz
    private Bill RacunZaSlanjeUplati = new Bill(); //Novi racun za dodavanje
    private Bill RacunZaSlanjePodigni = new Bill(); //Novi racun za dodavanje
    private Bill PrimljeniRacun = new Bill(); //Racun iz baze konvertovan
    private Bill CancelEditRacun = new Bill();  //Racun za ShallowCopy
    private Stopwatch sw = new Stopwatch();
    RadzenGrid<Bill> RadzenGrid;
    DateTime defaultDateTime = new DateTime(0001, 1, 1, 0, 0, 0);

    private bool showMatExpansionPanel;
    private bool showMatExpansionPanelUplati;
    private bool showMatExpansionPanelPodigni;
    private bool snackBarIsOpen;
    private bool IsMatDialogOpen;

    private int IDzaBrisanje;

    #region Uzimanje liste racuna iz baze
    protected override async Task OnInitializedAsync()
    {
        var serverStream = ServiceBill.GetAllBankaBills(new EmptyMsg());  //priprema za preuzimanje sa servera
        sw.Start();
        await foreach (var racun in serverStream.ResponseStream.ReadAllAsync())
        {
            ListaRacunaBanka.Add(ServiceConvert.ConvertCeoRacun(racun));
            if (sw.ElapsedMilliseconds == 5)
            {
                StateHasChanged();
            }
        }
        sw.Stop();
    }

    #endregion Uzimanje liste racuna iz baze


    #region Dodavanje racuna u bazu

    public async Task SubmitRacunBankaUplati()
    {
        Console.WriteLine(RacunZaSlanjeUplati.Naziv);
 
        RacunZaSlanjeUplati.Naziv ??= string.Empty;
        RacunZaSlanjeUplati.AdresaMusterije ??= string.Empty;
        if (DateTime.Compare(RacunZaSlanjeUplati.DatumSlanja, defaultDateTime) == 0)
            RacunZaSlanjeUplati.DatumSlanja = DateTime.Now;
        RacunZaSlanjeUplati.DatumPrimanja = RacunZaSlanjeUplati.DatumSlanja;
        Console.WriteLine(RacunZaSlanjeUplati.DatumSlanja);

        Console.WriteLine(RacunZaSlanjeUplati.Naziv);
        var request = ServiceConvert.ConvertBanka(RacunZaSlanjeUplati);

        var response = await ServiceBill.AddBillBankaAsync(request);
        if (response.IsUpisan)
        {
            PrimljeniRacun = ServiceConvert.ConvertCeoRacun(response.BillResponse);

            //snackBarIsOpen2 = response.Success; //true
            //messageWhitAddBill = response.Message;

            ListaRacunaBanka.Add(PrimljeniRacun);

            RacunZaSlanjeUplati = new Bill();
            StateHasChanged();
            await InvokeAsync(RadzenGrid.Reload);
        }
        else
        {
            //snackBarIsOpen = true;
            RacunZaSlanjeUplati = new Bill();
            StateHasChanged();
        }
    }

    public async Task SubmitRacunBankaPodigni()
    {
        Console.WriteLine(RacunZaSlanjePodigni.Naziv);
        RacunZaSlanjePodigni.Naziv ??= "UZEO SA RACUNA";
        RacunZaSlanjePodigni.AdresaMusterije ??= string.Empty;
        if (DateTime.Compare(RacunZaSlanjePodigni.DatumSlanja, defaultDateTime) == 0)
            RacunZaSlanjePodigni.DatumSlanja = DateTime.Now;
        RacunZaSlanjePodigni.DatumPrimanja = RacunZaSlanjePodigni.DatumSlanja;
        Console.WriteLine(RacunZaSlanjePodigni.DatumSlanja);

        Console.WriteLine(RacunZaSlanjePodigni.Naziv);
        var request = ServiceConvert.ConvertBanka(RacunZaSlanjePodigni);

        var response = await ServiceBill.AddBillBankaAsync(request);
        if (response.IsUpisan)
        {
            PrimljeniRacun = ServiceConvert.ConvertCeoRacun(response.BillResponse);

            //snackBarIsOpen2 = response.Success; //true
            //messageWhitAddBill = response.Message;

            ListaRacunaBanka.Add(PrimljeniRacun);
            //showMatExpansionPanel = false;
            RacunZaSlanjePodigni = new Bill();
            StateHasChanged();
            await InvokeAsync(RadzenGrid.Reload);
        }
        else
        {
            //snackBarIsOpen = true;
            RacunZaSlanjePodigni = new Bill();

            StateHasChanged();
        }
    }
    public void CancelSubmitRacun()
    {
        RacunZaSlanjeUplati = new Bill();
        RacunZaSlanjePodigni = new Bill();
        showMatExpansionPanelPodigni = false;
        showMatExpansionPanelUplati = false;
        StateHasChanged();
    }
    #endregion Dodavanje racuna u bazu

    #region Editovanje racuna u Radzenu

    public void EditRow(Bill bill)
    {
        Console.WriteLine(bill.ID + " ovo je ID racuna");
        CancelEditRacun = bill.ShallowCopy(); //ovo je racun pre izmene -- original
        RadzenGrid.EditRow(bill);
    }
    public async void CancelEdit(Bill bill)
    {
        RadzenGrid.CancelEditRow(bill); // menjamo bill, njega treba da uklonimo

        ListaRacunaBanka.Where(b => b.ID == CancelEditRacun.ID).FirstOrDefault().Naziv = CancelEditRacun.Naziv;
        ListaRacunaBanka.Where(b => b.ID == CancelEditRacun.ID).FirstOrDefault().AdresaMusterije = CancelEditRacun.AdresaMusterije;
        ListaRacunaBanka.Where(b => b.ID == CancelEditRacun.ID).FirstOrDefault().NabavnaCena = CancelEditRacun.NabavnaCena;
        ListaRacunaBanka.Where(b => b.ID == CancelEditRacun.ID).FirstOrDefault().ProdajnaCena = CancelEditRacun.ProdajnaCena;
        ListaRacunaBanka.Where(b => b.ID == CancelEditRacun.ID).FirstOrDefault().DatumSlanja = CancelEditRacun.DatumSlanja;
        ListaRacunaBanka.Where(b => b.ID == CancelEditRacun.ID).FirstOrDefault().DatumPrimanja = CancelEditRacun.DatumPrimanja;
        StateHasChanged();
        await InvokeAsync(RadzenGrid.Reload);



    }

    #endregion Editovanje racuna u Radzenu
    public async void SaveRow(Bill bill)
    {

        var response = await ServiceBill.ChangeBillPostaAsync(ServiceConvert.ConvertPosta(bill));

        if (response.IsChanged)
        {
            await RadzenGrid.UpdateRow(bill);
            ListaRacunaBanka = ListaRacunaBanka.OrderByDescending(b => (b.DatumSlanja.Date, b.DatumSlanja.TimeOfDay)).ToList(); //sortira po desc datum slanja, novi ubaceni su na vrh
            StateHasChanged();

        }
        else //ovo se nikad nece desiti jer ce uvek da ga nadje po Barcode-u u bazi i da ga izmeni,nema sansi da ga ne izmeni u bazi
        {
            //snackBarIsOpenChanged = true;
            RadzenGrid.CancelEditRow(bill);
        }
        await InvokeAsync(RadzenGrid.Reload);

    }

    #region Brisanje Racuna u Radzenu

    public void CheckForDelete(int ID)
    {
        IDzaBrisanje = ID;
        IsMatDialogOpen = true;
        StateHasChanged();
    }

    public async void DeleteBill(int ID)
    {
        DeleteBillRequest request = new DeleteBillRequest();
        request.ID = ID;

        var response = await ServiceBill.DeleteBillAsync(request);
        if (response.Status == true)
        {
            ListaRacunaBanka.Remove(ListaRacunaBanka.Where(b => b.ID == ID).FirstOrDefault());
            ListaRacunaBanka.OrderByDescending(b => b.DatumSlanja); //sortira po desc datumslanja, novi ubaceni su na vrh
            IsMatDialogOpen = false;
            await InvokeAsync(RadzenGrid.Reload);
        }
        else
        {
            IsMatDialogOpen = false;
            //snackBarIsOpenDeleted = true;
        }
        StateHasChanged();
    }

    #endregion

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ConvertGRPC ServiceConvert { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BillsNamespace.BillProtoServis.BillProtoServisClient ServiceBill { get; set; }
    }
}
#pragma warning restore 1591
